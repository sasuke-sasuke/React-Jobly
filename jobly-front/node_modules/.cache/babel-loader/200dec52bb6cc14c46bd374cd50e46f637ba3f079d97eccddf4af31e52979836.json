{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/JobCard.js\",\n  _s = $RefreshSig$();\nimport useToggle from \"../hooks/useToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobCard(_ref) {\n  _s();\n  let {\n    jobs,\n    isTitleHidden = false\n  } = _ref;\n  const [hasApplied, toggle] = useToggle(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: jobs.map(j => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: j.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), isTitleHidden && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: j.companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Salary: \", j.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Equity: \", j.equity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), !hasApplied ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: evt => toggle(evt.target, !hasApplied),\n        children: \"Apply\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: evt => toggle(evt.target, !hasApplied),\n        children: \"Applied\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 27\n      }, this)]\n    }, j.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_s(JobCard, \"rdKCaVZyzr/WgU1b47uQ/nXJc90=\", false, function () {\n  return [useToggle];\n});\n_c = JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["useToggle","jsxDEV","_jsxDEV","Fragment","_Fragment","JobCard","_ref","_s","jobs","isTitleHidden","hasApplied","toggle","children","map","j","title","fileName","_jsxFileName","lineNumber","columnNumber","companyName","salary","equity","onClick","evt","target","id","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/JobCard.js"],"sourcesContent":["import useToggle from \"../hooks/useToggle\"\n\nexport default function JobCard({jobs, isTitleHidden=false}) {\n\n    const [hasApplied, toggle ] = useToggle(false)\n\n\n\n    return (\n        <>\n            {jobs.map(j => (\n                <div key={j.id}>\n                    <h2>{j.title}</h2>\n                    {isTitleHidden && <p>{j.companyName}</p>}\n                    <p>Salary: {j.salary}</p>\n                    <p>Equity: {j.equity}</p>\n                    {\n                    !hasApplied ? \n                        <button onClick={(evt) => toggle(evt.target, !hasApplied)}>Apply</button> \n                        : <button onClick={(evt) => toggle(evt.target, !hasApplied)}>Applied</button> \n                    }\n                </div>\n            ))}\n        </>\n    )\n}"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,IAAI;IAAEC,aAAa,GAAC;EAAK,CAAC,GAAAH,IAAA;EAEvD,MAAM,CAACI,UAAU,EAAEC,MAAM,CAAE,GAAGX,SAAS,CAAC,KAAK,CAAC;EAI9C,oBACIE,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACKJ,IAAI,CAACK,GAAG,CAACC,CAAC,iBACPZ,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAKE,CAAC,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,EACjBV,aAAa,iBAAIP,OAAA;QAAAU,QAAA,EAAIE,CAAC,CAACM;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxCjB,OAAA;QAAAU,QAAA,GAAG,UAAQ,EAACE,CAAC,CAACO,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzBjB,OAAA;QAAAU,QAAA,GAAG,UAAQ,EAACE,CAAC,CAACQ,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,EAEzB,CAACT,UAAU,gBACPR,OAAA;QAAQqB,OAAO,EAAGC,GAAG,IAAKb,MAAM,CAACa,GAAG,CAACC,MAAM,EAAE,CAACf,UAAU,CAAE;QAAAE,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,gBACvEjB,OAAA;QAAQqB,OAAO,EAAGC,GAAG,IAAKb,MAAM,CAACa,GAAG,CAACC,MAAM,EAAE,CAACf,UAAU,CAAE;QAAAE,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,GAR3EL,CAAC,CAACY,EAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAWjB;EAAC,iBACH;AAEX;AAACZ,EAAA,CAvBuBF,OAAO;EAAA,QAEGL,SAAS;AAAA;AAAA2B,EAAA,GAFnBtB,OAAO;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}