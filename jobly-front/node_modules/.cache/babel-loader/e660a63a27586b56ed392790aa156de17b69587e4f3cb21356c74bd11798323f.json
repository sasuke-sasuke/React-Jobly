{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/EditForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport JoblyApi from \"../api\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditForm() {\n  _s();\n  const user = window.localStorage.getItem(\"user\");\n  const [formData, setFormData] = useState({\n    username: user,\n    fname: \"\",\n    lname: \"\",\n    email: \"\"\n  });\n  async function getUserInfo() {\n    const res = await JoblyApi.getUser(user);\n    const {\n      fname,\n      lname,\n      email\n    } = res.data;\n    setFormData({\n      username: user,\n      fname,\n      lname,\n      email\n    });\n  }\n  function handleChange(evt) {\n    setFormData({\n      ...formData,\n      [evt.target.name]: evt.target.value\n    });\n  }\n  function handleSubmit(evt) {\n    JoblyApi.patchUser(user, formData);\n  }\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        autoComplete: \"username\",\n        onChange: handleChange,\n        value: formData.username,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fname\",\n        id: \"fname\",\n        autoComplete: \"fname\",\n        onChange: handleChange,\n        value: formData.fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lname\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lname\",\n        id: \"lname\",\n        autoComplete: \"lname\",\n        onChange: handleChange,\n        value: formData.lname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        autoComplete: \"email\",\n        onChange: handleChange,\n        value: formData.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        path: \"/\",\n        text: \"Sign Up\",\n        func: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EditForm, \"c+ojjzktI7VvFgpUumcOD+c4KXI=\");\n_c = EditForm;\nvar _c;\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"names":["useState","useEffect","JoblyApi","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","EditForm","_s","user","window","localStorage","getItem","formData","setFormData","username","fname","lname","email","getUserInfo","res","getUser","data","handleChange","evt","target","name","value","handleSubmit","patchUser","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoComplete","onChange","disabled","path","text","func","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/EditForm.js"],"sourcesContent":["import { useState, useEffect} from \"react\";\nimport JoblyApi from \"../api\";\nimport Button from \"./Button\";\n\nexport default function EditForm() {\n    const user = window.localStorage.getItem(\"user\");\n\n    const [formData, setFormData] = useState({\n        username: user,\n        fname: \"\",\n        lname: \"\",\n        email: \"\"\n    })\n\n    async function getUserInfo() {\n        const res = await JoblyApi.getUser(user);\n        const {fname, lname, email} = res.data;\n        setFormData({\n            username: user,\n            fname,\n            lname,\n            email\n        })\n    }\n\n    function handleChange(evt) {\n        setFormData({\n              ...formData,\n                [evt.target.name]: evt.target.value\n            }\n        );\n    }\n\n    function handleSubmit(evt) {\n        JoblyApi.patchUser(user, formData);\n    }\n\n    useEffect(() => {\n        getUserInfo();\n    }, []);\n\n    return (\n        <>\n            <form>\n                <label htmlFor=\"username\">Username</label>\n                <input \n                    type=\"text\" \n                    name=\"username\" \n                    id=\"username\" \n                    autoComplete='username' \n                    onChange={handleChange} \n                    value={formData.username} \n                    disabled={true}\n                />\n                <label htmlFor=\"fname\">First Name</label>\n                <input\n                    type=\"text\"\n                    name=\"fname\"\n                    id=\"fname\"\n                    autoComplete='fname'\n                    onChange={handleChange}\n                    value={formData.fname}\n                />\n                <label htmlFor=\"lname\">Last Name</label>\n                <input\n                    type=\"text\"\n                    name=\"lname\"\n                    id=\"lname\"\n                    autoComplete='lname'\n                    onChange={handleChange}\n                    value={formData.lname}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    autoComplete='email'\n                    onChange={handleChange}\n                    value={formData.email}\n                />\n\n                <Button path='/' text='Sign Up' func={handleSubmit} />\n\n            </form>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAEhD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACrCgB,QAAQ,EAAEN,IAAI;IACdO,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,eAAeC,WAAWA,CAAA,EAAG;IACzB,MAAMC,GAAG,GAAG,MAAMnB,QAAQ,CAACoB,OAAO,CAACZ,IAAI,CAAC;IACxC,MAAM;MAACO,KAAK;MAAEC,KAAK;MAAEC;IAAK,CAAC,GAAGE,GAAG,CAACE,IAAI;IACtCR,WAAW,CAAC;MACRC,QAAQ,EAAEN,IAAI;MACdO,KAAK;MACLC,KAAK;MACLC;IACJ,CAAC,CAAC;EACN;EAEA,SAASK,YAAYA,CAACC,GAAG,EAAE;IACvBV,WAAW,CAAC;MACN,GAAGD,QAAQ;MACT,CAACW,GAAG,CAACC,MAAM,CAACC,IAAI,GAAGF,GAAG,CAACC,MAAM,CAACE;IAClC,CAAC,CACJ;EACL;EAEA,SAASC,YAAYA,CAACJ,GAAG,EAAE;IACvBvB,QAAQ,CAAC4B,SAAS,CAACpB,IAAI,EAAEI,QAAQ,CAAC;EACtC;EAEAb,SAAS,CAAC,MAAM;IACZmB,WAAW,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIf,OAAA,CAAAE,SAAA;IAAAwB,QAAA,eACI1B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAO2B,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAC1C/B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,UAAU;QACfW,EAAE,EAAC,UAAU;QACbC,YAAY,EAAC,UAAU;QACvBC,QAAQ,EAAEhB,YAAa;QACvBI,KAAK,EAAEd,QAAQ,CAACE,QAAS;QACzByB,QAAQ,EAAE;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjB,eACF/B,OAAA;QAAO2B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACzC/B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,OAAO;QACZW,EAAE,EAAC,OAAO;QACVC,YAAY,EAAC,OAAO;QACpBC,QAAQ,EAAEhB,YAAa;QACvBI,KAAK,EAAEd,QAAQ,CAACG;MAAM;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB,eACF/B,OAAA;QAAO2B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxC/B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXV,IAAI,EAAC,OAAO;QACZW,EAAE,EAAC,OAAO;QACVC,YAAY,EAAC,OAAO;QACpBC,QAAQ,EAAEhB,YAAa;QACvBI,KAAK,EAAEd,QAAQ,CAACI;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB,eACF/B,OAAA;QAAO2B,OAAO,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACpC/B,OAAA;QACIgC,IAAI,EAAC,OAAO;QACZV,IAAI,EAAC,OAAO;QACZW,EAAE,EAAC,OAAO;QACVC,YAAY,EAAC,OAAO;QACpBC,QAAQ,EAAEhB,YAAa;QACvBI,KAAK,EAAEd,QAAQ,CAACK;MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxB,eAEF/B,OAAA,CAACF,MAAM;QAACuC,IAAI,EAAC,GAAG;QAACC,IAAI,EAAC,SAAS;QAACC,IAAI,EAAEf;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEnD,iBACR;AAEX;AAAC3B,EAAA,CAnFuBD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}