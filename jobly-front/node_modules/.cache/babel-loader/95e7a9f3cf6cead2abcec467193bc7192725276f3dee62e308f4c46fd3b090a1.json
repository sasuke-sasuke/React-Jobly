{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/SignupForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport JoblyApi from '../api';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignupForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [fname, setFname] = useState('');\n  const [lname, setLname] = useState('');\n  const [email, setEmail] = useState('');\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  function handleChange(evt) {\n    switch (evt.target.name) {\n      case 'username':\n        setUsername(evt.target.value);\n        break;\n      case 'password':\n        setPassword(evt.target.value);\n        break;\n      case 'fname':\n        setFname(evt.target.value);\n        break;\n      case 'lname':\n        setLname(evt.target.value);\n        break;\n      case 'email':\n        setEmail(evt.target.value);\n        break;\n      default:\n        break;\n    }\n  }\n  async function handleSubmit(evt) {\n    const res = await JoblyApi.signupUser(username, password, fname, lname, email);\n    setCurrentUser(username);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        autoComplete: \"username\",\n        onChange: handleChange,\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        onChange: handleChange,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fname\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fname\",\n        id: \"fname\",\n        autoComplete: \"fname\",\n        onChange: handleChange,\n        value: fname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lname\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lname\",\n        id: \"lname\",\n        autoComplete: \"lname\",\n        onChange: handleChange,\n        value: lname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        autoComplete: \"email\",\n        onChange: handleChange,\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        path: \"/\",\n        text: \"Sign Up\",\n        func: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(SignupForm, \"PZehFAP2M0fCW3I+XBMDCdpg06o=\");\n_c = SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["useState","useContext","UserContext","JoblyApi","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","username","setUsername","password","setPassword","fname","setFname","lname","setLname","email","setEmail","setCurrentUser","handleChange","evt","target","name","value","handleSubmit","res","signupUser","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoComplete","onChange","path","text","func","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/SignupForm.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\nimport JoblyApi from '../api';\nimport Button from './Button';\n\nexport default function SignupForm() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [fname, setFname] = useState('');\n    const [lname, setLname] = useState('');\n    const [email, setEmail] = useState('');\n    const {setCurrentUser} = useContext(UserContext);\n\n    function handleChange(evt) {\n        switch (evt.target.name) {\n            case 'username':\n                setUsername(evt.target.value);\n                break;\n            case 'password':\n                setPassword(evt.target.value);\n                break;\n            case 'fname':\n                setFname(evt.target.value);\n                break;\n            case 'lname':\n                setLname(evt.target.value);\n                break;\n            case 'email':\n                setEmail(evt.target.value);\n                break;\n            default:\n                break;\n        }\n     }\n\n     async function handleSubmit(evt) {\n        const res = await JoblyApi.signupUser(username, password, fname, lname, email)\n        setCurrentUser(username);  \n     }\n\n    return (\n        <>\n           <form>\n            <label htmlFor=\"username\">Username</label>\n            <input \n                type=\"text\" \n                name=\"username\" \n                id=\"username\" \n                autoComplete='username' \n                onChange={handleChange} \n                value={username} \n            />\n            <label htmlFor=\"password\">Password</label>\n            <input \n                type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                autoComplete='current-password' \n                onChange={handleChange} \n                value={password}\n            />\n            <label htmlFor=\"fname\">First Name</label>\n            <input\n                type=\"text\"\n                name=\"fname\"\n                id=\"fname\"\n                autoComplete='fname'\n                onChange={handleChange}\n                value={fname}\n            />\n            <label htmlFor=\"lname\">Last Name</label>\n            <input\n                type=\"text\"\n                name=\"lname\"\n                id=\"lname\"\n                autoComplete='lname'\n                onChange={handleChange}\n                value={lname}\n            />\n            <label htmlFor=\"email\">Email</label>\n            <input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                autoComplete='email'\n                onChange={handleChange}\n                value={email}\n            />\n\n            <Button path='/' text='Sign Up' func={handleSubmit} />\n\n           </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}