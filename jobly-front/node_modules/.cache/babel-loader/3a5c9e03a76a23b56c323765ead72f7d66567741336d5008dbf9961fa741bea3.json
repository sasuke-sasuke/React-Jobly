{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport { TokenContext } from '../context/TokenContext';\nimport { UserContext } from \"../context/UserContext\";\nimport JoblyApi from '../api';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    token,\n    setToken\n  } = useContext(TokenContext);\n  const {\n    currentUser,\n    setCurrentUser\n  } = useContext(UserContext);\n  function handleChange(evt) {\n    evt.target.name === 'username' ? setUsername(evt.target.value) : setPassword(evt.target.value);\n  }\n  async function handleSubmit(evt) {\n    try {\n      const t = await JoblyApi.loginUser(username, password);\n      setToken(t);\n      setCurrentUser(username);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  useEffect(() => {\n    const data = window.localStorage.getItem('user');\n    if (data !== null) setCurrentUser(JSON.parse(data));\n  }, []);\n  useEffect(() => {\n    window.localStorage.setItem('user', JSON.stringify(currentUser));\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        autoComplete: \"username\",\n        onChange: handleChange,\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        autoComplete: \"current-password\",\n        onChange: handleChange,\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        path: \"/\",\n        text: \"Login\",\n        func: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n_s(LoginForm, \"9GFU4NetHtM9IWLb/1sCvs8+T34=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","useContext","useEffect","TokenContext","UserContext","JoblyApi","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","username","setUsername","password","setPassword","token","setToken","currentUser","setCurrentUser","handleChange","evt","target","name","value","handleSubmit","t","loginUser","err","console","error","data","window","localStorage","getItem","JSON","parse","setItem","stringify","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","autoComplete","onChange","path","text","func","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/LoginForm.js"],"sourcesContent":["import { useState, useContext, useEffect } from 'react';\nimport { TokenContext } from '../context/TokenContext';\nimport { UserContext } from \"../context/UserContext\";\nimport JoblyApi from '../api';\nimport Button from './Button';\n\nexport default function LoginForm() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const {token, setToken} = useContext(TokenContext);\n    const {currentUser, setCurrentUser} = useContext(UserContext);\n\n    function handleChange(evt) {\n        (evt.target.name === 'username')? setUsername(evt.target.value)\n        : setPassword(evt.target.value)\n     }\n\n     async function handleSubmit(evt) {\n        try {\n            const t = await JoblyApi.loginUser(username, password);\n            setToken(t);\n            setCurrentUser(username);\n        } catch (err) {\n            console.error(err);\n        }\n     }\n\n     useEffect(() => {\n        const data = window.localStorage.getItem('user');\n        if(data !== null) setCurrentUser(JSON.parse(data));\n     }, [])\n\n     useEffect(() => {\n        window.localStorage.setItem('user', JSON.stringify(currentUser));\n     }, [currentUser])\n\n    return (\n        <>\n           <form >\n            <label htmlFor=\"username\">Username</label>\n            <input \n                type=\"text\" \n                name=\"username\" \n                id=\"username\" \n                autoComplete='username' \n                onChange={handleChange} \n                value={username} \n            />\n            <label htmlFor=\"password\">Password</label>\n            <input \n                type=\"password\" \n                name=\"password\" \n                id=\"password\" \n                autoComplete='current-password' \n                onChange={handleChange} \n                value={password}\n            />\n            <Button path='/' text='Login' func={handleSubmit} />\n\n           </form>\n        </>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}