{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { TokenContext } from '../context/TokenContext';\nimport { UserContext } from \"../context/UserContext\";\nimport JoblyApi from '../api';\nimport Button from './Button';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    setToken\n  } = useContext(TokenContext);\n  const {\n    setCurrentUser\n  } = useContext(UserContext);\n  function handleChange(evt) {\n    evt.target.name === 'username' ? setUsername(evt.target.value) : setPassword(evt.target.value);\n  }\n  async function handleSubmit(evt) {\n    try {\n      const token = await JoblyApi.loginUser(username, password);\n      setToken(token);\n      setCurrentUser(username);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2,\n        mt: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"text\",\n          name: \"username\",\n          id: \"username\",\n          autoComplete: \"username\",\n          onChange: handleChange,\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\",\n          onChange: handleChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 2,\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            path: \"/\",\n            text: \"Login\",\n            func: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(LoginForm, \"60VYtnc6r79H60m/TQCCTiBlvBA=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","useContext","TokenContext","UserContext","JoblyApi","Button","Box","Paper","TextField","InputLabel","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","username","setUsername","password","setPassword","setToken","setCurrentUser","handleChange","evt","target","name","value","handleSubmit","token","loginUser","err","console","error","children","elevation","sx","p","mt","component","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","type","id","autoComplete","onChange","display","justifyContent","path","text","func","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/LoginForm.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { TokenContext } from '../context/TokenContext';\nimport { UserContext } from \"../context/UserContext\";\nimport JoblyApi from '../api';\nimport Button from './Button';\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\n\nexport default function LoginForm() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const {setToken} = useContext(TokenContext);\n    const {setCurrentUser} = useContext(UserContext);\n\n    function handleChange(evt) {\n        (evt.target.name === 'username')? setUsername(evt.target.value)\n        : setPassword(evt.target.value)\n     }\n\n     async function handleSubmit(evt) {\n        try {\n            const token = await JoblyApi.loginUser(username, password);\n            setToken(token);\n            setCurrentUser(username);\n        } catch (err) {\n            console.error(err);\n        }\n     }\n\n    return (\n        <>\n        <Paper elevation={3} sx={{p:2, mt:1}} >\n            <Box component='form' >\n                <InputLabel htmlFor=\"username\">Username</InputLabel>\n                <TextField\n                    fullWidth \n                    type=\"text\" \n                    name=\"username\" \n                    id=\"username\" \n                    autoComplete='username' \n                    onChange={handleChange} \n                    value={username} \n                />\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <TextField\n                    fullWidth \n                    type=\"password\" \n                    name=\"password\" \n                    id=\"password\" \n                    autoComplete='current-password' \n                    onChange={handleChange} \n                    value={password}\n                />\n                <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center' }}>\n                    <Button path='/' text='Login' func={handleSubmit} />\n                </Box>\n\n           </Box>\n        </Paper>\n        </>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC5C,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAACoB;EAAQ,CAAC,GAAGnB,UAAU,CAACC,YAAY,CAAC;EAC3C,MAAM;IAACmB;EAAc,CAAC,GAAGpB,UAAU,CAACE,WAAW,CAAC;EAEhD,SAASmB,YAAYA,CAACC,GAAG,EAAE;IACtBA,GAAG,CAACC,MAAM,CAACC,IAAI,KAAK,UAAU,GAAGR,WAAW,CAACM,GAAG,CAACC,MAAM,CAACE,KAAK,CAAC,GAC7DP,WAAW,CAACI,GAAG,CAACC,MAAM,CAACE,KAAK,CAAC;EAClC;EAEA,eAAeC,YAAYA,CAACJ,GAAG,EAAE;IAC9B,IAAI;MACA,MAAMK,KAAK,GAAG,MAAMxB,QAAQ,CAACyB,SAAS,CAACb,QAAQ,EAAEE,QAAQ,CAAC;MAC1DE,QAAQ,CAACQ,KAAK,CAAC;MACfP,cAAc,CAACL,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOc,GAAG,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACtB;EACH;EAED,oBACInB,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACAtB,OAAA,CAACJ,KAAK;MAAC2B,SAAS,EAAE,CAAE;MAACC,EAAE,EAAE;QAACC,CAAC,EAAC,CAAC;QAAEC,EAAE,EAAC;MAAC,CAAE;MAAAJ,QAAA,eACjCtB,OAAA,CAACL,GAAG;QAACgC,SAAS,EAAC,MAAM;QAAAL,QAAA,gBACjBtB,OAAA,CAACF,UAAU;UAAC8B,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAa,eACpDhC,OAAA,CAACH,SAAS;UACNoC,SAAS;UACTC,IAAI,EAAC,MAAM;UACXpB,IAAI,EAAC,UAAU;UACfqB,EAAE,EAAC,UAAU;UACbC,YAAY,EAAC,UAAU;UACvBC,QAAQ,EAAE1B,YAAa;UACvBI,KAAK,EAAEV;QAAS;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClB,eACFhC,OAAA,CAACF,UAAU;UAAC8B,OAAO,EAAC,UAAU;UAAAN,QAAA,EAAC;QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAa,eACpDhC,OAAA,CAACH,SAAS;UACNoC,SAAS;UACTC,IAAI,EAAC,UAAU;UACfpB,IAAI,EAAC,UAAU;UACfqB,EAAE,EAAC,UAAU;UACbC,YAAY,EAAC,kBAAkB;UAC/BC,QAAQ,EAAE1B,YAAa;UACvBI,KAAK,EAAER;QAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClB,eACFhC,OAAA,CAACL,GAAG;UAAC6B,EAAE,EAAE;YAAEE,EAAE,EAAE,CAAC;YAAEY,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE;UAAS,CAAE;UAAAjB,QAAA,eAC1DtB,OAAA,CAACN,MAAM;YAAC8C,IAAI,EAAC,GAAG;YAACC,IAAI,EAAC,OAAO;YAACC,IAAI,EAAE1B;UAAa;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD,iBACL;AAEX;AAAC5B,EAAA,CArDuBD,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}