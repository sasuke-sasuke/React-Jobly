{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/Company.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Company() {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    const comps = JoblyApi.getCompanies();\n    setCompanies([...companies, {\n      handle: comps.handle,\n      name: comps.name,\n      description: comps.description\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: companies.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: c.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)]\n    }, c.handle, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_s(Company, \"fvSMykEKVRSxSgZ7G/ZC4cRqlrw=\");\n_c = Company;\nvar _c;\n$RefreshReg$(_c, \"Company\");","map":{"version":3,"names":["useState","useEffect","JoblyApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Company","_s","companies","setCompanies","comps","getCompanies","handle","name","description","children","map","c","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/Company.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport JoblyApi from '../api';\n\nexport default function Company() {\n    const [companies, setCompanies] = useState([]);\n\n    useEffect(() => {\n        const comps = JoblyApi.getCompanies();\n        setCompanies([...companies, {handle: comps.handle, name: comps.name, description: comps.description}]);\n    }, [])\n\n    return (\n        <>\n            {companies.map(c => (\n                <div key={c.handle}>\n                    <h2>{c.name}</h2>\n                    <p>{c.description}</p>\n                </div>\n            ))}\n        </>\n    )\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAGT,QAAQ,CAACU,YAAY,EAAE;IACrCF,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAE;MAACI,MAAM,EAAEF,KAAK,CAACE,MAAM;MAAEC,IAAI,EAAEH,KAAK,CAACG,IAAI;MAAEC,WAAW,EAAEJ,KAAK,CAACI;IAAW,CAAC,CAAC,CAAC;EAC1G,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACKP,SAAS,CAACQ,GAAG,CAACC,CAAC,iBACZd,OAAA;MAAAY,QAAA,gBACIZ,OAAA;QAAAY,QAAA,EAAKE,CAAC,CAACJ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACjBlB,OAAA;QAAAY,QAAA,EAAIE,CAAC,CAACH;MAAW;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFhBJ,CAAC,CAACL,MAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIrB;EAAC,iBACH;AAEX;AAACd,EAAA,CAlBuBD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}