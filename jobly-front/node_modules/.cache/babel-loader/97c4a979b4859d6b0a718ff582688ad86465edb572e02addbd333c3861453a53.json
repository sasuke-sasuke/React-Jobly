{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/CompanyCard.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport JoblyApi from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CompanyCard() {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    async function fetchCompanies() {\n      const res = await JoblyApi.getCompanies();\n      setCompanies([...res]);\n    }\n    fetchCompanies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: companies.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: c.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: c.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, crypto.randomUUID(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_s(CompanyCard, \"fvSMykEKVRSxSgZ7G/ZC4cRqlrw=\");\n_c = CompanyCard;\nvar _c;\n$RefreshReg$(_c, \"CompanyCard\");","map":{"version":3,"names":["useState","useEffect","JoblyApi","jsxDEV","_jsxDEV","Fragment","_Fragment","CompanyCard","_s","companies","setCompanies","fetchCompanies","res","getCompanies","children","map","c","name","fileName","_jsxFileName","lineNumber","columnNumber","description","crypto","randomUUID","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/CompanyCard.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport JoblyApi from '../api';\n\nexport default function CompanyCard() {\n    const [companies, setCompanies] = useState([]);\n\n    useEffect(() => {\n        async function fetchCompanies() {\n            const res = await JoblyApi.getCompanies();\n            setCompanies([...res]);\n        }\n        fetchCompanies();\n    }, []);\n\n    \n\n    return (\n        <>\n            {companies.map(c => (\n                <div key={crypto.randomUUID()}>\n                    <h2>{c.name}</h2>\n                    <p>{c.description}</p>\n                </div>\n            ))}\n        </>\n    )\n}"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZ,eAAeU,cAAcA,CAAA,EAAG;MAC5B,MAAMC,GAAG,GAAG,MAAMV,QAAQ,CAACW,YAAY,EAAE;MACzCH,YAAY,CAAC,CAAC,GAAGE,GAAG,CAAC,CAAC;IAC1B;IACAD,cAAc,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAIN,oBACIP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EACKL,SAAS,CAACM,GAAG,CAACC,CAAC,iBACZZ,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAKE,CAAC,CAACC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACjBjB,OAAA;QAAAU,QAAA,EAAIE,CAAC,CAACM;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,GAFhBE,MAAM,CAACC,UAAU,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAIhC;EAAC,iBACH;AAEX;AAACb,EAAA,CAvBuBD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}