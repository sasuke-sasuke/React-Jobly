{"ast":null,"code":"var _jsxFileName = \"/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/JobCard.js\";\nimport JobCardButton from \"./JobCardButton\";\nimport Box from '@mui/material/Box';\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function JobCard(_ref) {\n  let {\n    jobs,\n    isTitleHidden = false\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: jobs.map(j => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 5,\n      sx: {\n        my: 3,\n        px: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: j.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this), !isTitleHidden && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        component: \"h4\",\n        children: j.companyName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          children: [\"Salary: \", j.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          component: \"p\",\n          children: [\"Equity: \", j.equity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(JobCardButton, {\n        jobId: j.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)]\n    }, j.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n_c = JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["JobCardButton","Box","Paper","Typography","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","JobCard","_ref","jobs","isTitleHidden","children","map","j","elevation","sx","my","px","variant","component","title","fileName","_jsxFileName","lineNumber","columnNumber","companyName","mt","salary","equity","jobId","id","_c","$RefreshReg$"],"sources":["/Users/sasuke/code/software-dev-bootcamp/react-jobly/jobly-front/src/components/JobCard.js"],"sourcesContent":["import JobCardButton from \"./JobCardButton\";\nimport Box from '@mui/material/Box'\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nexport default function JobCard({jobs, isTitleHidden=false}) {\n\n    return (\n        <>\n            {jobs.map(j => (\n                <Paper elevation={5}  sx={{my:3, px:3}} key={j.id}>\n                    <Typography variant=\"h5\" component=\"h2\">{j.title}</Typography>\n                    {!isTitleHidden && <Typography variant=\"subtitle1\" component='h4'>{j.companyName}</Typography>}\n                    <Box sx={{mt:3}} >\n                        <Typography variant=\"subtitle1\" component='p'>Salary: {j.salary}</Typography>\n                        <Typography variant=\"subtitle1\" component='p'>Equity: {j.equity}</Typography>\n                    </Box>\n                    <JobCardButton jobId={j.id} />\n                </Paper>\n            ))}\n        </>\n    )\n}"],"mappings":";AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,eAAe,SAASC,OAAOA,CAAAC,IAAA,EAA8B;EAAA,IAA7B;IAACC,IAAI;IAAEC,aAAa,GAAC;EAAK,CAAC,GAAAF,IAAA;EAEvD,oBACIJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,EACKF,IAAI,CAACG,GAAG,CAACC,CAAC,iBACPT,OAAA,CAACJ,KAAK;MAACc,SAAS,EAAE,CAAE;MAAEC,EAAE,EAAE;QAACC,EAAE,EAAC,CAAC;QAAEC,EAAE,EAAC;MAAC,CAAE;MAAAN,QAAA,gBACnCP,OAAA,CAACH,UAAU;QAACiB,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAAAR,QAAA,EAAEE,CAAC,CAACO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,EAC7D,CAACd,aAAa,iBAAIN,OAAA,CAACH,UAAU;QAACiB,OAAO,EAAC,WAAW;QAACC,SAAS,EAAC,IAAI;QAAAR,QAAA,EAAEE,CAAC,CAACY;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAc,eAC9FpB,OAAA,CAACL,GAAG;QAACgB,EAAE,EAAE;UAACW,EAAE,EAAC;QAAC,CAAE;QAAAf,QAAA,gBACZP,OAAA,CAACH,UAAU;UAACiB,OAAO,EAAC,WAAW;UAACC,SAAS,EAAC,GAAG;UAAAR,QAAA,GAAC,UAAQ,EAACE,CAAC,CAACc,MAAM;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAc,eAC7EpB,OAAA,CAACH,UAAU;UAACiB,OAAO,EAAC,WAAW;UAACC,SAAS,EAAC,GAAG;UAAAR,QAAA,GAAC,UAAQ,EAACE,CAAC,CAACe,MAAM;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAc;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3E,eACNpB,OAAA,CAACN,aAAa;QAAC+B,KAAK,EAAEhB,CAAC,CAACiB;MAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA,GAPWX,CAAC,CAACiB,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QASpD;EAAC,iBACH;AAEX;AAACO,EAAA,GAjBuBxB,OAAO;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}